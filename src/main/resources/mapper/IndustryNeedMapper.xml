<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzmusxxy.mapper.IndustryNeedMapper">
  <resultMap id="BaseResultMap" type="com.gzmusxxy.entity.IndustryNeed">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="file" jdbcType="VARCHAR" property="file" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from industry_need
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gzmusxxy.entity.IndustryNeed">
    insert into industry_need (type, content,
      date, userid, username, 
      file, comment_num)
    values (#{type,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
      #{date,jdbcType=TIMESTAMP}, #{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
      #{file,jdbcType=VARCHAR}, #{commentNum,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.gzmusxxy.entity.IndustryNeed">
    update industry_need
    set type = #{type,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      userid = #{userid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR},
      comment_num = #{commentNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, type, content, date, userid, username, file, comment_num
    from industry_need
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, type, content, date, userid, username, file, comment_num
    from industry_need
  </select>
  <select id="selectByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select n.id, n.type, n.content, n.date, u.name username, n.file, n.comment_num
    from industry_need n left join industry_user u on n.userid = u.id
    where type = #{type,jdbcType=INTEGER} order by n.date desc
  </select>
  <select id="selectCountByUserIdAndType" resultType="java.lang.Integer">
    select count(id)
    from industry_need
    where type = #{type,jdbcType=INTEGER} and userid = #{userId,jdbcType=INTEGER}
  </select>
  <update id="updateReadNumber" parameterType="java.lang.Integer">
    update industry_need set comment_num = comment_num + 1 where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>