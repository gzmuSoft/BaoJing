<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzmusxxy.mapper.XjhbInformationMapper">
  <resultMap id="BaseResultMap" type="com.gzmusxxy.entity.XjhbInformation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="outlay" jdbcType="DOUBLE" property="outlay" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="one_card_solution" jdbcType="VARCHAR" property="oneCardSolution" />
    <result column="other_proof_name" jdbcType="VARCHAR" property="otherProofName" />
    <result column="other_proof" jdbcType="VARCHAR" property="otherProof" />
    <result column="project_application" jdbcType="VARCHAR" property="projectApplication" />
    <result column="project_application_name" jdbcType="VARCHAR" property="projectApplicationName" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xjhb_information
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gzmusxxy.entity.XjhbInformation">
    insert into xjhb_information (id, project_id, outlay,
      start_time, end_time, one_card_solution,
      other_proof_name, other_proof, project_application,
      project_application_name, person_id, create_time,
      status)
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{outlay,jdbcType=DOUBLE},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{oneCardSolution,jdbcType=VARCHAR},
      #{otherProofName,jdbcType=VARCHAR}, #{otherProof,jdbcType=VARCHAR}, #{projectApplication,jdbcType=VARCHAR},
      #{projectApplicationName,jdbcType=VARCHAR}, #{personId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.gzmusxxy.entity.XjhbInformation">
    update xjhb_information
    set project_id = #{projectId,jdbcType=INTEGER},
      outlay = #{outlay,jdbcType=DOUBLE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      one_card_solution = #{oneCardSolution,jdbcType=VARCHAR},
      other_proof_name = #{otherProofName,jdbcType=VARCHAR},
      other_proof = #{otherProof,jdbcType=VARCHAR},
      project_application = #{projectApplication,jdbcType=VARCHAR},
      project_application_name = #{projectApplicationName,jdbcType=VARCHAR},
      person_id = #{personId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, project_id, outlay, start_time, end_time, one_card_solution, other_proof_name,
    other_proof, project_application, project_application_name, person_id, create_time,
    status
    from xjhb_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, project_id, outlay, start_time, end_time, one_card_solution, other_proof_name,
    other_proof, project_application, project_application_name, person_id, create_time,
    status
    from xjhb_information
  </select>

  <select id="findInfobyPersonId" resultMap="BaseResultMap">
    select id, project_id, outlay, start_time, end_time, one_card_solution, other_proof_name,
    other_proof, project_application, project_application_name, person_id, create_time,
    status
    from xjhb_information
    where person_id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectInformationByNameLike" resultMap="BaseResultMap" parameterType="java.lang.String">
    select h.id, h.project_id, h.project_name,h.outlay, h.start_time, h.end_time, h.one_card_solution, h.other_proof_name,
    h.other_proof,h.project_application_name, h.project_application, h.person_id,p.name as person_name,h.create_time, h.status
    from (select i.id, i.project_id, p.project_name,i.outlay, i.start_time, i.end_time, i.one_card_solution, i.other_proof_name,
    i.other_proof,i.project_application_name, i.project_application, i.person_id,i.create_time, i.status
    from xjhb_information i join xjhb_project p
    where i.project_id= p.id and p.project_name like #{name}) h join xjhb_person p
    where h.person_id = p.id and h.status = 1
  </select>
</mapper>
